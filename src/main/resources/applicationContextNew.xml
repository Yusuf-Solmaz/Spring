<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="sportProps"/>


    <bean id="myCoach" class="com.example.tomcat10.XMLConf.inversionOfControl.BaseballCoach">
    </bean>

    <!-- IOC Example -->
    <bean id="myStore" class="com.example.tomcat10.XMLConf.iocExample.PhonePart">
    </bean>

    <!-- Dependency for Injection -->
    <bean id="myWeather" class="com.example.tomcat10.XMLConf.dependencyInjectionXmlConf.RainyDay">
    </bean>

    <bean id="watchSports" class="com.example.tomcat10.XMLConf.dependencyInjectionXmlConf.Formula1">
        <!-- Constructor Injection -->
        <constructor-arg ref="myWeather"/>
    </bean>

    <!-- Setter Injection -->
    <bean id="watchBasketball" class="com.example.tomcat10.XMLConf.dependencyInjectionXmlConf.Basketball">
        <property name="weatherService" ref="myWeather"/>

        <!-- Value Injection -->
        <property name="teamName" value="Chicago Bulls"/>
        <property name="date" value="30.01.2023"/>

    </bean>

    <bean id="watchVolleyball" class="com.example.tomcat10.XMLConf.dependencyInjectionXmlConf.Volleyball">
        <property name="weatherService" ref="myWeather"/>
        <property name="teamName" value="${prop.name}"/>
        <property name="date" value="${prop.Date}"/>
    </bean>

    <bean id="myFortune" class="com.example.tomcat10.XMLConf.dependencyInjectionExample.MyFortune">
    </bean>

    <!-- scope="prototype" oluşturulan bean'leri farklı adreste tutar. scope="singleton" oluşan bean'leri aynı adreste tutar ve default değerdir.  -->
    <!-- init-method="methodName" , destroy-method="methodName" (Bean çağırıldığında init; kapatıldığında destroy'daki methodlar çağrılır.)-->
    <!-- scope eğer "prototype olursa destroy method çağırılmaz." -->
    <bean id="myDay" class="com.example.tomcat10.XMLConf.dependencyInjectionExample.MyDay" >
        <constructor-arg ref="myFortune"/>
    </bean>
</beans>

